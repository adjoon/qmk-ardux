// Copyright (c) 2022 purple-rw
// SPDX-License-Identifier: Apache-2.0

// adjoon Tenkey number combos definition

//   NAME                            RESULT                         TRIGGER
COMB(combo_nine,                     KC_9,                          KNUM_T1, KNUM_T2)
COMB(combo_seven,                    KC_7,                                   KNUM_T2, KNUM_T3)
COMB(combo_eight,                    KC_8,                          KNUM_T1, KNUM_T2, KNUM_T3)
COMB(combo_zero,                     KC_0,                                   KNUM_B2, KNUM_B3)
COMB(combo_dot,                      KC_DOT,                        KNUM_B1, KNUM_B2)

// again for NUMLOCK layer
//   NAME                            RESULT                         TRIGGER
COMB(combo_NUMLOCK_nine,             KC_9,                          KNMLK_T1, KNMLK_T2)
COMB(combo_NUMLOCK_seven,            KC_7,                                   KNMLK_T2, KNMLK_T3)
COMB(combo_NUMLOCK_eight,            KC_8,                          KNMLK_T1, KNMLK_T2, KNMLK_T3)
COMB(combo_NUMLOCK_zero,             KC_0,                                   KNMLK_B2, KNMLK_B3)
COMB(combo_NUMLOCK_dot,              KC_DOT,                        KNMLK_B1, KNMLK_B2)


// Layout Cheatsheet
//
//       Left Hand                          Right Hand
// ,-------------------.              ,-------------------.
// | T4 | T3 | T2 | T1 |   Top row    | T1 | T2 | T3 | T4 |
// |----+----+----+----|              |----+----+----+----|
// | B4 | B3 | B2 | B1 |  Bottom row  | B1 | B2 | B3 | B4 |
// `-------------------'              `-------------------'


// adjoon custom letter combos definition
// sorted roughly in order of easiness to input (PERSONAL OPINION)
// letter order roughly matches english letter frequency (per https://norvig.com/mayzner.html)
// with some minor changes that made felt intuitive

//   NAME                            RESULT                         TRIGGER
COMB(combo_h,                        KC_H,                                   KEY_B3,  KEY_B2)
COMB(combo_a,                        KC_A,                                            KEY_B2,  KEY_B1)
COMB(combo_u,                        KC_U,                                   KEY_T3,  KEY_T2)
COMB(combo_l,                        KC_L,                                            KEY_T2,  KEY_T1)
COMB(combo_d,                        KC_D,                                   KEY_B3,           KEY_B1)
COMB(combo_f,                        KC_F,                                   KEY_T3,           KEY_T1)
COMB(combo_m,                        KC_M,                          KEY_B4,                    KEY_B1)
COMB(combo_w,                        KC_W,                          KEY_T4,                    KEY_T1)
COMB(combo_c,                        KC_C,                                   KEY_B3,  KEY_B2,  KEY_B1)
COMB(combo_g,                        KC_G,                                   KEY_T3,  KEY_T2,  KEY_T1)
COMB(combo_b,                        KC_B,                          KEY_B4,  KEY_B3)
COMB(combo_p,                        KC_P,                          KEY_T4,  KEY_T3)
COMB(combo_v,                        KC_V,                          KEY_B4,  KEY_B3,  KEY_B2)
COMB(combo_y,                        KC_Y,                          KEY_T4,  KEY_T3,  KEY_T2)
COMB(combo_k,                        KC_K,                          KEY_B4,  KEY_B3,           KEY_B1)
COMB(combo_q,                        KC_Q,                          KEY_T4,  KEY_T3,           KEY_T1)
COMB(combo_x,                        KC_X,                          KEY_B4,           KEY_B2)
COMB(combo_j,                        KC_J,                          KEY_T4,           KEY_T2)
COMB(combo_z,                        KC_Z,                          KEY_T4,  KEY_T3,  KEY_T2,  KEY_T1)